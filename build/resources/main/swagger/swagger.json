{
  "swagger": "2.0",
  "info": {
    "description": "Spring Boot REST API for Currency Service",
    "version": "1.0",
    "title": "Currency Rate Aggregation Service Documentation",
    "termsOfService": "http://localhost:8080/v2/api-docs",
    "contact": {
      "name": "developer",
      "email": "yurii.loienko@sigma.software"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "user-details-controller",
      "description": "User Details Controller"
    },
    {
      "name": "currency-controller",
      "description": "Currency Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/currencies": {
      "get": {
        "tags": [
          "currency-controller"
        ],
        "summary": "Returns a {@link Page} of currencies meeting the paging restriction provided in the {@code Pageable} object.",
        "operationId": "findAllUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N)",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). Default sort order is ascending.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "currency-controller"
        ],
        "summary": "Create currency and flushes changes instantly.",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "currencyDTO",
            "description": "currencyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          },
          "400": {
            "description": "Bad request. Not valid data"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/currencies/{id}": {
      "get": {
        "tags": [
          "currency-controller"
        ],
        "summary": "Retrieves an currency by its id.",
        "operationId": "findByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "currency-controller"
        ],
        "summary": "The method update currency by id",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "currencyDTO",
            "description": "currencyDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          },
          "400": {
            "description": "Bad request. Not valid data"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "currency-controller"
        ],
        "summary": "Deletes the currency with the given id",
        "operationId": "deleteUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/user/{id}/details": {
      "post": {
        "tags": [
          "user-details-controller"
        ],
        "summary": "The method creates user details by {@code id} and status is {@code ACTIVE}. Saves an user details and flushes changes instantly.",
        "operationId": "createUserDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userDetailsDTO",
            "description": "userDetailsDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetailsDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/UserDetailsDTO"
            }
          },
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/UserDetailsDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Returns a {@link Page} of users meeting the paging restriction provided in the {@code Pageable} object and status {@code ACTIVE}.",
        "operationId": "findAllUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N)",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). Default sort order is ascending by id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create unique user data by username, email and flushes changes instantly.",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad request. Not valid data"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "The method created token by user data. Throws ResourceNotFoundException if user not present.",
        "operationId": "loginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "usernameAndPasswordDataDTO",
            "description": "usernameAndPasswordDataDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsernameAndPasswordDataDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Please set your own password!!!",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request. Not valid data"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Updates password created by user",
        "operationId": "assignPasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "usernameAndPasswordDataDTO",
            "description": "usernameAndPasswordDataDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsernameAndPasswordDataDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Retrieves an user by its id.",
        "operationId": "findByIdUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "The method update user by id and status {@code ACTIVE}",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userDTO",
            "description": "userDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad request. Not valid data"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Changes the status of the user to {@code DELETED} with the given id and status {@code ACTIVE}.",
        "operationId": "deleteUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Full authentication is required to access this resource"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "CurrencyDTO": {
      "type": "object",
      "properties": {
        "bankName": {
          "type": "string",
          "example": "Pumb",
          "description": "Name of used bank"
        },
        "currencyCode": {
          "type": "string",
          "example": "USD",
          "description": "Unique identifier of the currency. Use ISO 4217 CURRENCY CODES for the presentation of currencies"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Unique identifier of the currency. No two currency can have the same id."
        },
        "purchaseCurrency": {
          "type": "string",
          "example": "27.85",
          "description": "Currency purchase price"
        },
        "saleOfCurrency": {
          "type": "string",
          "example": "28.10",
          "description": "Currency sale value"
        }
      },
      "description": "A class representing the exchange rate for each bankÑ"
    },
    "Page": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      }
    },
    "Page«CurrencyDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«UserDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      }
    },
    "UserDTO": {
      "type": "object",
      "required": [
        "email",
        "name",
        "role",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@ukr.net",
          "description": "Unique email of the user"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of the user. No two users can have the same id."
        },
        "name": {
          "type": "string",
          "example": "test",
          "description": "User name"
        },
        "role": {
          "type": "array",
          "example": "[\"admin\"]",
          "description": "User role 'admin' or 'role'",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string",
          "example": "unique",
          "description": "Unique username of the user"
        }
      },
      "description": "Class representing a user data for work with the application."
    },
    "UserDetailsDTO": {
      "type": "object",
      "required": [
        "description",
        "surname"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "Good Person!",
          "description": "User description"
        },
        "phone": {
          "type": "string",
          "example": "+38(012)345-67-89",
          "description": "User phone number"
        },
        "surname": {
          "type": "string",
          "example": "Surname",
          "description": "User surname"
        }
      },
      "description": "A class representing additional data for the user."
    },
    "UsernameAndPasswordDataDTO": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "Qwerty1",
          "description": "Conditional word or set of signs intended to confirm identity or authority."
        },
        "username": {
          "type": "string",
          "example": "admin",
          "description": "User name"
        }
      },
      "description": "A class representing the username and password for accessing the program functionality."
    }
  }
}